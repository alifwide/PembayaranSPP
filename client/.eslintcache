[{"/home/alipw/Documents/from-stratch/fullstack/pembayaran_spp_2/client/src/index.js":"1","/home/alipw/Documents/from-stratch/fullstack/pembayaran_spp_2/client/src/pages/LoginAdmin.js":"2","/home/alipw/Documents/from-stratch/fullstack/pembayaran_spp_2/client/src/pages/LoginSiswa.js":"3","/home/alipw/Documents/from-stratch/fullstack/pembayaran_spp_2/client/src/pages/HomeAdmin.js":"4","/home/alipw/Documents/from-stratch/fullstack/pembayaran_spp_2/client/src/pages/Tes.js":"5"},{"size":835,"mtime":1618107496188,"results":"6","hashOfConfig":"7"},{"size":3567,"mtime":1617970633314,"results":"8","hashOfConfig":"7"},{"size":2605,"mtime":1617883441792,"results":"9","hashOfConfig":"7"},{"size":14895,"mtime":1618153397612,"results":"10","hashOfConfig":"7"},{"size":3445,"mtime":1618142276733,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14","usedDeprecatedRules":"15"},"1b40gaj",{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"15"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"15"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"15"},"/home/alipw/Documents/from-stratch/fullstack/pembayaran_spp_2/client/src/index.js",["28","29"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    useHistory,\n} from \"react-router-dom\";\nimport LoginAdmin from \"./pages/LoginAdmin.js\";\nimport LoginSiswa from \"./pages/LoginSiswa.js\";\nimport Home from \"./pages/HomeAdmin.js\";\nimport Tes from \"./pages/Tes.js\"\n\nfunction App() {\n    return (\n        <Router>\n            <Switch>\n                <Route path=\"/loginAdmin\" component={LoginAdmin} />\n                <Route path=\"/LoginSiswa\" component={LoginSiswa} />\n                <Route path=\"/HomeAdmin\" component={Home} />\n                <Route path=\"/HomeSiswa\" component={Home} />\n                <Route path=\"/tes\" component={Tes} />\n\n            </Switch>\n        </Router>\n    );\n}\n\nReactDOM.render(<App />, document.getElementById(\"app\"));\n",["30","31"],"/home/alipw/Documents/from-stratch/fullstack/pembayaran_spp_2/client/src/pages/LoginAdmin.js",["32","33"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"../styles/style.css\";\nimport axios from \"axios\";\n\nexport default function LoginAdmin() {\n  let history = useHistory();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [level, setLevel] = useState(\"petugas\");\n  const [message, setMessage] = useState(\"\");\n  const [token, setToken] = useState(() => {\n    localStorage.getItem(\"token\");\n  });\n\n  //make a request to the API\n  function loginHandler() {\n    axios({\n      method: \"post\",\n      url: \"http://localhost:3001/api/login\",\n      data: {\n        level: level,\n        username: username,\n        password: password,\n      },\n    })\n      .then((response) => {\n        if (response.data.token) {\n          setMessage(\"\");\n          localStorage.clear();\n          localStorage.setItem(\"token\", response.data.token);\n          localStorage.setItem(\"level\", response.data.level);\n          window.location = \"/homeadmin\";\n        } else {\n          setMessage(response.data.message);\n        }\n      })\n      .catch((err) => {\n        setMessage(err.message);\n      });\n  }\n\n  useEffect(() => {\n    if (!localStorage.getItem(\"token\")) {\n      //do nothing\n    } else {\n      const confirmed = window.confirm(\n        \"Apakah andka yakin ingin logout dan mengakhiri sesi?\"\n      );\n      if (!confirmed) {\n        history.push(\"/homeadmin\");\n      } else {\n        localStorage.clear();\n      }\n    }\n  }, [token]);\n\n  return (\n    <div>\n      <div className=\"login-grid\">\n        <form className=\"login-form\">\n          <h3>Login</h3>\n          <br />\n          <div className=\"form-group\">\n            <label htmlFor=\"username\">Username</label>\n            <input\n              type=\"username\"\n              className=\"form-control\"\n              id=\"username\"\n              placeholder=\"Enter username\"\n              value={username}\n              onChange={(ev) => setUsername(ev.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              className=\"form-control\"\n              id=\"password\"\n              placeholder=\"Password\"\n              value={password}\n              onChange={(ev) => setPassword(ev.target.value)}\n            />\n          </div>\n          <label htmlFor=\"priv-level\">Pilih Level</label>\n          <div\n            onChange={(ev) => setLevel(ev.target.value)}\n            className=\"login-select-priv\"\n            id=\"priv-level\"\n          >\n            <div className=\"radio\">\n              <label>\n                <input\n                  type=\"radio\"\n                  name=\"optionsRadios\"\n                  id=\"optionsRadios1\"\n                  value=\"petugas\"\n                  defaultChecked={true}\n                />\n                Petugas\n              </label>\n            </div>\n            <div className=\"radio\">\n              <label>\n                <input\n                  type=\"radio\"\n                  name=\"optionsRadios\"\n                  id=\"optionsRadios2\"\n                  value=\"admin\"\n                />\n                Admin\n              </label>\n            </div>\n          </div>\n          <p className=\"text-danger\">{message}</p>\n          <button\n            type=\"button\"\n            className=\"btn btn-primary\"\n            onClick={loginHandler}\n          >\n            Submit\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n","/home/alipw/Documents/from-stratch/fullstack/pembayaran_spp_2/client/src/pages/LoginSiswa.js",["34"],"import React, { useState } from \"react\";\nimport \"../styles/style.css\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\n\nexport default function LoginSiswa() {\n    let history = useHistory();\n\n    const [NISN, setNISN] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [message, setMessage] = useState(\"\");\n\n    //make a request to the API\n    function loginHandler() {\n        axios({\n            method: \"post\",\n            url: \"http://localhost:3001/api/login\",\n            data: {\n                level: \"siswa\",\n                username: NISN,\n                password: password,\n            },\n        }).then((response) => {\n            if (response.data.token) {\n                setMessage(\"\");\n                localStorage.setItem(\"token\", response.data.token);\n                localStorage.setItem(\"level\", response.data.level);\n                history.push(\"/homesiswa\");\n            } else {\n                setMessage(response.data.message);\n            }\n        });\n    }\n\n    return (\n        <div>\n            <div className=\"login-grid\">\n                <form className=\"login-form\">\n                    <h3>Login</h3>\n                    <br />\n                    <div className=\"form-group\">\n                        <label htmlFor=\"NISN\">NISN</label>\n                        <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            id=\"NISN\"\n                            placeholder=\"Enter NISN\"\n                            value={NISN}\n                            onChange={(ev) => setNISN(ev.target.value)}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input\n                            type=\"password\"\n                            className=\"form-control\"\n                            id=\"password\"\n                            placeholder=\"Password\"\n                            value={password}\n                            onChange={(ev) => setPassword(ev.target.value)}\n                        />\n                    </div>\n                    <p className=\"text-danger\">{message}</p>\n\n                    <button\n                        type=\"button\"\n                        className=\"btn btn-primary\"\n                        onClick={loginHandler}\n                    >\n                        Submit\n                    </button>\n                </form>\n            </div>\n        </div>\n    );\n}\n","/home/alipw/Documents/from-stratch/fullstack/pembayaran_spp_2/client/src/pages/HomeAdmin.js",["35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59"],"import React, { useState, useEffect } from \"react\";\nimport \"../styles/style.css\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\n\nexport default function Home() {\n    const [tableName, setTableName] = useState(\"kelas\");\n    const [dbData, setDbData] = useState([{}]);\n    const [message, setMessage] = useState(\"\");\n    const [crudElement, setCrudElement] = useState(\"\");\n    const [update, setUpdate] = useState(false);\n    const [tableData, setTableData] = useState({});\n    const [referenceData, setReferenceData] = useState([]);\n\tconst [formData, setFormData] = useState({});\n\t\n\tuseEffect(fetchTableData, [tableName], []);\n\n    function fetchTableData() {\n        const token = localStorage.getItem(\"token\");\n        axios({\n            method: \"get\",\n            url: \"http://localhost:3001/api/crud/msc/tableinfo/\" + tableName,\n            headers: { Authorization: `Bearer ${token}` },\n        })\n            .then((response) => {\n                setReferenceData(response.data.reference_ids);\n                delete response.data[\"reference_ids\"];\n                setTableData(response.data);\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n\t}\n\t\n\tfunction sendData() {\n        if(Object.keys(formData).length != Object.keys(tableData).length){\n            setMessage(\"data Incomplete\")\n            console.log(formData)\n        }\n        else{\n            const token = localStorage.getItem(\"token\");\n            axios({\n                method: \"post\",\n                data: formData,\n                url: \"http://localhost:3001/api/crud/\" + tableName,\n                headers: { Authorization: `Bearer ${token}` },\n            })\n                .then((response) => {\n                    makeNull()\n                    setUpdate(!update)\n                })\n                .catch((error) => {\n                    if(error.response){\n                        setMessage(error.response.data)\n                        console.log(\"error : \", error.response)\n                    }\n                });\n            }\n    }\n\n    function makeNull() {\n        Object.keys(tableData).map((key) => {\n\t\t\tif(tableData[key].references) {\n                formData[key] = referenceData[tableData[key].references.model][0];\n            }\n\t\t\telse formData[key] = \" \";\n        });\n        setFormData({ ...formData });\n        console.log(formData)\n    }\n\n    function form() {\n        try{\n            var form = (\n                <div className=\"form-group col-sm-5\">\n                    {Object.keys(tableData).map((key) => (\n                        <>\n                            <label> {key}</label>\n                            {tableData[key].references ? (\n                                <select\n                                    onChange={(ev) => {\n                                        formData[key] = ev.target.value;\n                                        setFormData({ ...formData });\n                                    }}\n                                    value={formData[key]}\n                                    className=\"form-control\"\n                                >\n                                    {referenceData[\n                                        tableData[key].references.model\n                                    ].map((value) => (\n                                        <option>{value}</option>\n                                    ))}\n                                </select>\n                            ) : (\n                                <input\n                                    type=\"text\"\n                                    onChange={(ev) => {\n                                        formData[key] = ev.target.value;\n                                        setFormData({ ...formData});\n                                    }}\n                                    value={formData[key]}\n                                    className=\"form-control\"\n                                ></input>\n                            )}\n                        </>\n                    ))}\n                    <br />\n                    <button className=\"btn btn-primary\" onClick={sendData}>\n                        Insert\n                    </button>\n                </div>\n            );\n        }catch(error){\n            <h1>an error has occured</h1>\n        }\n        \n\n        return form;\n    }\n\n    let history = useHistory();\n\n\n    //fetch data for CRUD\n    function fetchData() {\n        if (\n            !localStorage.getItem(\"token\") &&\n            (localStorage.getItem(\"level\") != \"petugas\" ||\n                localStorage.getItem(\"level\") != \"admin\")\n        ) {\n            history.push(\"/loginadmin\");\n        }\n        const token = localStorage.getItem(\"token\");\n        setFormData({})\n        axios({\n            method: \"get\",\n            url: \"http://localhost:3001/api/crud/\" + tableName,\n            headers: { Authorization: `Bearer ${token}` },\n        })\n            .then((response) => {\n                setMessage(\"\");\n                setDbData(response.data);\n            })\n            .catch((error) => {\n                setMessage(error.message);\n                if ((error.response && error.response.status == 401)) {\n                    localStorage.clear();\n                    history.push(\"/loginadmin\");\n                }\n                \n\n            });\n    }\n\n    function updateData() {\n        makeNull()\n        setCrudElement(crudTable);\n    }\n\n \n\n    //lakukan request ke backend setiap kali tablename diganti atau dipaksa update oleh variabel update\n    useEffect(fetchData, [tableName, update], []);\n\n    //update isi table setiap kali ada perubahan di state dbData\n    useEffect(updateData, [dbData], []);\n\n    //fungsi menghapus data\n    function Drop(fieldname, id) {\n        const confirmed = window.confirm(\n            `Apakah anda yakin ingin menghapus data dengan ${fieldname} : ${id} ?`\n        );\n\n        var data_to_send = {\n            where_id: id,\n        };\n\n        if (confirmed) {\n            const token = localStorage.getItem(\"token\");\n            axios({\n                method: \"delete\",\n                data: data_to_send,\n                url: \"http://localhost:3001/api/crud/\" + tableName,\n                headers: { Authorization: `Bearer ${token}` },\n            })\n                .then(() => {\n                    setUpdate(!update);\n                })\n                .catch((error) => {\n                    if(error.response){\n                        console.log(error.response)\n                        setMessage(error.response.data);\n                    }\n                });\n        }\n    }\n\n    //render the crud table element\n    function crudTable() {\n        //mencoba me render data table, jika tidak ada data apapun untuk di render, maka return \"database kosong\"\n        try {\n            var crudTableHead = Object.keys(dbData[0]).map((key) => (\n                <th>{key}</th>\n            ));\n\n            var crudTableData = dbData.map((object) => (\n                <tr>\n                    {Object.keys(object).map((key) => (\n                        <td>{object[key]}</td>\n                    ))}\n                    <a\n                        className=\"btn btn-sm btn-danger btn-padding\"\n                        onClick={(ev) =>\n                            Drop(\n                                Object.keys(object)[0],\n                                object[Object.keys(object)[0]]\n                            )\n                        }\n                    >\n                        {\" \"}\n                        Delete{\" \"}\n                    </a>\n                    <a\n                        id={object[Object.keys(object)[0]]}\n                        fieldName={Object.keys(object)[0]}\n                        className=\"btn btn-sm btn-warning btn-padding\"\n                    >\n                        {\" \"}\n                        Edit{\" \"}\n                    </a>\n                </tr>\n            ));\n        } catch (e) {\n            return <h3 className=\"text-danger padding\">Database kosong</h3>;\n        }\n\n        return (\n            <div className=\"crudTable\">\n                <table className=\"table\">\n                    <thead>\n                        <tr>\n                            {crudTableHead}\n                            <th colspan=\"2\">Actions</th>\n                        </tr>\n                    </thead>\n                    <tbody>{crudTableData}</tbody>\n                </table>\n            </div>\n        );\n    }\n\n    return (\n        <div>\n            <nav className=\"navbar navbar-default\">\n                <div className=\"container-fluid\">\n                    <div className=\"navbar-header\">\n                        <button\n                            type=\"button\"\n                            className=\"navbar-toggle collapsed\"\n                            data-toggle=\"collapse\"\n                            data-target=\"#bs-example-navbar-collapse-1\"\n                            aria-expanded=\"false\"\n                        >\n                            <span className=\"sr-only\">Toggle navigation</span>\n                            <span className=\"icon-bar\" />\n                            <span className=\"icon-bar\" />\n                            <span className=\"icon-bar\" />\n                        </button>\n                        <a className=\"navbar-brand\" href=\"#\">\n                            Brand\n                        </a>\n                    </div>\n                    <div\n                        className=\"collapse navbar-collapse\"\n                        id=\"bs-example-navbar-collapse-1\"\n                    >\n                        <ul className=\"nav navbar-nav\">\n                            <li className=\"active\">\n                                <a href=\"#\">\n                                    Link{\" \"}\n                                    <span className=\"sr-only\">(current)</span>\n                                </a>\n                            </li>\n                            <li>\n                                <a href=\"#\">Link</a>\n                            </li>\n                            <li className=\"dropdown\">\n                                <a\n                                    href=\"#\"\n                                    className=\"dropdown-toggle\"\n                                    data-toggle=\"dropdown\"\n                                    role=\"button\"\n                                    aria-haspopup=\"true\"\n                                    aria-expanded=\"false\"\n                                >\n                                    Dropdown <span className=\"caret\" />\n                                </a>\n                                <ul className=\"dropdown-menu\">\n                                    <li>\n                                        <a href=\"#\">Action</a>\n                                    </li>\n                                    <li>\n                                        <a href=\"#\">Another action</a>\n                                    </li>\n                                    <li>\n                                        <a href=\"#\">Something else here</a>\n                                    </li>\n                                    <li role=\"separator\" className=\"divider\" />\n                                    <li>\n                                        <a href=\"#\">Separated link</a>\n                                    </li>\n                                    <li role=\"separator\" className=\"divider\" />\n                                    <li>\n                                        <a href=\"#\">One more separated link</a>\n                                    </li>\n                                </ul>\n                            </li>\n                        </ul>\n                        <form className=\"navbar-form navbar-left\">\n                            <div className=\"form-group\">\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"Search\"\n                                />\n                            </div>\n                            <button type=\"submit\" className=\"btn btn-default\">\n                                Submit\n                            </button>\n                        </form>\n                        <ul className=\"nav navbar-nav navbar-right\">\n                            <li>\n                                <a href=\"#\">Link</a>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </nav>\n            <div className=\"container-fluid\">\n                <div onChange={(ev) => setTableName(ev.target.value)}>\n                    <label class=\"radio-inline\">\n                        <input\n                            type=\"radio\"\n                            name=\"inlineRadioOptions\"\n                            defaultChecked={tableName == \"kelas\"}\n                            value=\"kelas\"\n                        />{\" \"}\n                        Kelas\n                    </label>\n                    <label class=\"radio-inline\">\n                        <input\n                            type=\"radio\"\n                            name=\"inlineRadioOptions\"\n                            defaultChecked={tableName == \"pembayaran\"}\n                            value=\"pembayaran\"\n                        />{\" \"}\n                        Pembayaran\n                    </label>\n                    <label class=\"radio-inline\">\n                        <input\n                            type=\"radio\"\n                            name=\"inlineRadioOptions\"\n                            defaultChecked={tableName == \"petugas\"}\n                            value=\"petugas\"\n                        />{\" \"}\n                        Petugas\n                    </label>\n                    <label class=\"radio-inline\">\n                        <input\n                            type=\"radio\"\n                            name=\"inlineRadioOptions\"\n                            defaultChecked={tableName == \"siswa\"}\n                            value=\"siswa\"\n                        />{\" \"}\n                        Siswa\n                    </label>\n                    <label class=\"radio-inline\">\n                        <input\n                            type=\"radio\"\n                            name=\"inlineRadioOptions\"\n                            defaultChecked={tableName == \"spp\"}\n                            value=\"spp\"\n                        />{\" \"}\n                        SPP\n                    </label>\n                </div>\n                {crudElement}\n                <p className=\"text-danger\">{message}</p>\n                <br/>\n                {form()}\n            </div>\n        </div>\n    );\n}\n","/home/alipw/Documents/from-stratch/fullstack/pembayaran_spp_2/client/src/pages/Tes.js",["60","61","62","63"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport default function Tes() {\n    const [tableData, setTableData] = useState({});\n    const [referenceData, setReferenceData] = useState([]);\n\tconst [formData, setFormData] = useState({});\n\tconst [message, setMessage] = useState(\"\")\n\tconst tableName = \"pembayaran\";\n\t\n\tuseEffect(fetchData, []);\n\n    function fetchData() {\n        const token = localStorage.getItem(\"token\");\n        axios({\n            method: \"get\",\n            url: \"http://localhost:3001/api/crud/msc/tableinfo/\" + tableName,\n            headers: { Authorization: `Bearer ${token}` },\n        })\n            .then((response) => {\n                setReferenceData(response.data.reference_ids);\n                delete response.data[\"reference_ids\"];\n                setTableData(response.data);\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n\t}\n\t\n\tfunction sendData() {\n        if(Object.keys(formData).length != Object.keys(tableData).length){\n            setMessage(\"data Incomplete\")\n            console.log(formData)\n        }\n        else{\n            const token = localStorage.getItem(\"token\");\n            axios({\n                method: \"post\",\n                data: formData,\n                url: \"http://localhost:3001/api/crud/\" + tableName,\n                headers: { Authorization: `Bearer ${token}` },\n            })\n                .then((response) => {\n\t\t\t\t\tmakeNull()\n                })\n                .catch((error) => {\n                    if(error.response){\n                        setMessage(error.response.data)\n                        console.log(\"error : \", error.response.data)\n                    }\n                });\n            }\n    }\n\n    function makeNull() {\n        Object.keys(tableData).map((key) => {\n\t\t\tif(tableData[key].references) formData[key] = referenceData[tableData[key].references.model][0]\n\t\t\telse formData[key] = \" \";\n        });\n        setFormData({ ...formData });\n    }\n\n    function form() {\n        var form = (\n            <div className=\"form-group col-sm-5\">\n                {Object.keys(tableData).map((key) => (\n                    <>\n                        <label> {key}</label>\n                        {tableData[key].references ? (\n\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\tonChange={(ev) => {\n\t\t\t\t\t\t\t\t\tformData[key] = ev.target.value;\n\t\t\t\t\t\t\t\t\tsetFormData({ ...formData });\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tvalue={formData[key]}\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{referenceData[\n\t\t\t\t\t\t\t\t\ttableData[key].references.model\n\t\t\t\t\t\t\t\t].map((value) => (\n\t\t\t\t\t\t\t\t\t<option>{value}</option>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</select>\n                        ) : (\n                            <input\n                                type=\"text\"\n                                onChange={(ev) => {\n                                    formData[key] = ev.target.value;\n                                    setFormData({ ...formData });\n                                }}\n                                value={formData[key]}\n                                className=\"form-control\"\n                            ></input>\n                        )}\n                    </>\n                ))}\n                <br />\n                <button className=\"btn btn-primary\" onClick={makeNull}>\n                    Make Null\n                </button>\n            </div>\n        );\n\n        return form;\n    }\n\n    return form();\n}\n",{"ruleId":"64","severity":1,"message":"65","line":7,"column":5,"nodeType":"66","messageId":"67","endLine":7,"endColumn":9},{"ruleId":"64","severity":1,"message":"68","line":8,"column":5,"nodeType":"66","messageId":"67","endLine":8,"endColumn":15},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"64","severity":1,"message":"73","line":13,"column":17,"nodeType":"66","messageId":"67","endLine":13,"endColumn":25},{"ruleId":"74","severity":1,"message":"75","line":57,"column":6,"nodeType":"76","endLine":57,"endColumn":13,"suggestions":"77"},{"ruleId":"64","severity":1,"message":"78","line":3,"column":10,"nodeType":"66","messageId":"67","endLine":3,"endColumn":18},{"ruleId":"64","severity":1,"message":"78","line":3,"column":10,"nodeType":"66","messageId":"67","endLine":3,"endColumn":18},{"ruleId":"79","severity":1,"message":"80","line":36,"column":41,"nodeType":"81","messageId":"82","endLine":36,"endColumn":43},{"ruleId":"83","severity":1,"message":"84","line":62,"column":42,"nodeType":"85","messageId":"86","endLine":62,"endColumn":44},{"ruleId":"79","severity":1,"message":"80","line":128,"column":44,"nodeType":"81","messageId":"82","endLine":128,"endColumn":46},{"ruleId":"79","severity":1,"message":"80","line":129,"column":47,"nodeType":"81","messageId":"82","endLine":129,"endColumn":49},{"ruleId":"79","severity":1,"message":"87","line":146,"column":62,"nodeType":"81","messageId":"82","endLine":146,"endColumn":64},{"ruleId":"74","severity":1,"message":"75","line":163,"column":26,"nodeType":"76","endLine":163,"endColumn":45,"suggestions":"88"},{"ruleId":"74","severity":1,"message":"89","line":166,"column":27,"nodeType":"76","endLine":166,"endColumn":35,"suggestions":"90"},{"ruleId":"91","severity":1,"message":"92","line":211,"column":21,"nodeType":"93","endLine":219,"endColumn":22},{"ruleId":"91","severity":1,"message":"92","line":223,"column":21,"nodeType":"93","endLine":227,"endColumn":22},{"ruleId":"91","severity":1,"message":"94","line":269,"column":25,"nodeType":"93","endLine":269,"endColumn":62},{"ruleId":"91","severity":1,"message":"94","line":279,"column":33,"nodeType":"93","endLine":279,"endColumn":45},{"ruleId":"91","severity":1,"message":"94","line":285,"column":33,"nodeType":"93","endLine":285,"endColumn":45},{"ruleId":"91","severity":1,"message":"94","line":288,"column":33,"nodeType":"93","endLine":295,"endColumn":34},{"ruleId":"91","severity":1,"message":"94","line":300,"column":41,"nodeType":"93","endLine":300,"endColumn":53},{"ruleId":"91","severity":1,"message":"94","line":303,"column":41,"nodeType":"93","endLine":303,"endColumn":53},{"ruleId":"91","severity":1,"message":"94","line":306,"column":41,"nodeType":"93","endLine":306,"endColumn":53},{"ruleId":"91","severity":1,"message":"94","line":310,"column":41,"nodeType":"93","endLine":310,"endColumn":53},{"ruleId":"91","severity":1,"message":"94","line":314,"column":41,"nodeType":"93","endLine":314,"endColumn":53},{"ruleId":"91","severity":1,"message":"94","line":333,"column":33,"nodeType":"93","endLine":333,"endColumn":45},{"ruleId":"79","severity":1,"message":"87","line":345,"column":55,"nodeType":"81","messageId":"82","endLine":345,"endColumn":57},{"ruleId":"79","severity":1,"message":"87","line":354,"column":55,"nodeType":"81","messageId":"82","endLine":354,"endColumn":57},{"ruleId":"79","severity":1,"message":"87","line":363,"column":55,"nodeType":"81","messageId":"82","endLine":363,"endColumn":57},{"ruleId":"79","severity":1,"message":"87","line":372,"column":55,"nodeType":"81","messageId":"82","endLine":372,"endColumn":57},{"ruleId":"79","severity":1,"message":"87","line":381,"column":55,"nodeType":"81","messageId":"82","endLine":381,"endColumn":57},{"ruleId":"64","severity":1,"message":"95","line":8,"column":9,"nodeType":"66","messageId":"67","endLine":8,"endColumn":16},{"ruleId":"64","severity":1,"message":"96","line":30,"column":11,"nodeType":"66","messageId":"67","endLine":30,"endColumn":19},{"ruleId":"79","severity":1,"message":"80","line":31,"column":41,"nodeType":"81","messageId":"82","endLine":31,"endColumn":43},{"ruleId":"83","severity":1,"message":"84","line":56,"column":42,"nodeType":"85","messageId":"86","endLine":56,"endColumn":44},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","no-native-reassign",["97"],"no-negated-in-lhs",["98"],"'setToken' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["99"],"'Redirect' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Expected '===' and instead saw '=='.",["100"],"React Hook useEffect has missing dependencies: 'crudTable' and 'makeNull'. Either include them or remove the dependency array.",["101"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'message' is assigned a value but never used.","'sendData' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"102","fix":"103"},{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},"Update the dependencies array to be: [history, token]",{"range":"108","text":"109"},"Update the dependencies array to be: [history, tableName, update]",{"range":"110","text":"111"},"Update the dependencies array to be: [crudTable, dbData, makeNull]",{"range":"112","text":"113"},[1521,1528],"[history, token]",[5637,5656],"[history, tableName, update]",[5755,5763],"[crudTable, dbData, makeNull]"]