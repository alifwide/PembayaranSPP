[{"/home/alipw/Documents/from-stratch/fullstack/pembayaran_spp_2/client/src/index.js":"1","/home/alipw/Documents/from-stratch/fullstack/pembayaran_spp_2/client/src/pages/LoginAdmin.js":"2","/home/alipw/Documents/from-stratch/fullstack/pembayaran_spp_2/client/src/pages/LoginSiswa.js":"3","/home/alipw/Documents/from-stratch/fullstack/pembayaran_spp_2/client/src/pages/HomeAdmin.js":"4","/home/alipw/Documents/from-stratch/fullstack/pembayaran_spp_2/client/src/pages/Tes.js":"5","/home/alipw/Documents/from-stratch/fullstack/pembayaran_spp_2/client/src/pages/History.js":"6","/home/alipw/Documents/from-stratch/fullstack/pembayaran_spp_2/client/src/pages/HomePetugas.js":"7"},{"size":996,"mtime":1618287496986,"results":"8","hashOfConfig":"9"},{"size":4707,"mtime":1618318346279,"results":"10","hashOfConfig":"9"},{"size":2666,"mtime":1618285359025,"results":"11","hashOfConfig":"9"},{"size":12310,"mtime":1618977493929,"results":"12","hashOfConfig":"9"},{"size":3445,"mtime":1618142276733,"results":"13","hashOfConfig":"9"},{"size":6187,"mtime":1618287969764,"results":"14","hashOfConfig":"9"},{"size":7900,"mtime":1618290068551,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},"1b40gaj",{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"19"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"19"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"19"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"19"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"19"},"/home/alipw/Documents/from-stratch/fullstack/pembayaran_spp_2/client/src/index.js",["37","38"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    useHistory,\n} from \"react-router-dom\";\nimport LoginAdmin from \"./pages/LoginAdmin.js\";\nimport LoginSiswa from \"./pages/LoginSiswa.js\";\nimport Home from \"./pages/HomeAdmin.js\";\nimport HomePetugas from \"./pages/HomePetugas.js\";\nimport Tes from \"./pages/Tes.js\"\nimport History from \"./pages/History.js\"\n\nfunction App() {\n    return (\n        <Router>\n            <Switch>\n                <Route path=\"/loginAdmin\" component={LoginAdmin} />\n                <Route path=\"/LoginSiswa\" component={LoginSiswa} />\n                <Route path=\"/HomeAdmin\" component={Home} />\n                <Route path=\"/homepetugas\" component={HomePetugas} />\n                <Route path=\"/tes\" component={Tes} />\n                <Route path=\"/History\" component={History} />\n            </Switch>\n        </Router>\n    );\n}\n\nReactDOM.render(<App />, document.getElementById(\"app\"));\n",["39","40"],"/home/alipw/Documents/from-stratch/fullstack/pembayaran_spp_2/client/src/pages/LoginAdmin.js",["41","42"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"../styles/style.css\";\nimport axios from \"axios\";\n\nexport default function LoginAdmin() {\n    let history = useHistory();\n\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [level, setLevel] = useState(\"petugas\");\n    const [message, setMessage] = useState(\"\");\n    const [token, setToken] = useState(() => {\n        localStorage.getItem(\"token\");\n    });\n\n    //make a request to the API\n    function loginHandler() {\n        axios({\n            method: \"post\",\n            url: \"http://localhost:3001/api/login\",\n            data: {\n                level: level,\n                username: username,\n                password: password,\n            },\n        })\n            .then((response) => {\n                if (response.data.token) {\n                    setMessage(\"\");\n                    localStorage.clear();\n                    localStorage.setItem(\"token\", response.data.token);\n\t\t\t\t\tlocalStorage.setItem(\"level\", response.data.level);\n                    window.location = \"/home\" + response.data.level;\n                } else {\n                    setMessage(response.data.message);\n                }\n            })\n            .catch((err) => {\n                setMessage(err.message);\n            });\n    }\n\n    useEffect(() => {\n        if (!localStorage.getItem(\"token\")) {\n            //do nothing\n        } else {\n            const confirmed = window.confirm(\n                \"Apakah anda yakin ingin logout dan mengakhiri sesi?\"\n            );\n            if (!confirmed) {\n                history.push(\"/homeadmin\");\n            } else {\n                localStorage.clear();\n            }\n        }\n    }, [token]);\n\n    return (\n        <div >\n            <div className=\"login-grid\">\n                <form className=\"login-form\">\n                    <h3>Login</h3>\n                    <br />\n                    <div className=\"form-group\">\n                        <label htmlFor=\"username\">Username</label>\n                        <input\n                            type=\"username\"\n                            className=\"form-control\"\n                            id=\"username\"\n                            placeholder=\"Enter username\"\n                            value={username}\n                            onChange={(ev) => setUsername(ev.target.value)}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input\n                            type=\"password\"\n                            className=\"form-control\"\n                            id=\"password\"\n                            placeholder=\"Password\"\n                            value={password}\n                            onChange={(ev) => setPassword(ev.target.value)}\n                        />\n                    </div>\n                    <label htmlFor=\"priv-level\">Pilih Level</label>\n                    <div\n                        onChange={(ev) => setLevel(ev.target.value)}\n                        className=\"login-select-priv\"\n                        id=\"priv-level\"\n                    >\n                        <div className=\"radio\">\n                            <label>\n                                <input\n                                    type=\"radio\"\n                                    name=\"optionsRadios\"\n                                    id=\"optionsRadios1\"\n                                    value=\"petugas\"\n                                    defaultChecked={true}\n                                />\n                                Petugas\n                            </label>\n                        </div>\n                        <div className=\"radio\">\n                            <label>\n                                <input\n                                    type=\"radio\"\n                                    name=\"optionsRadios\"\n                                    id=\"optionsRadios2\"\n                                    value=\"admin\"\n                                />\n                                Admin\n                            </label>\n                        </div>\n                    </div>\n                    <p className=\"text-danger\">{message}</p>\n                    <button\n                        type=\"button\"\n                        className=\"btn btn-primary\"\n                        onClick={loginHandler}\n                    >\n                        Submit\n                    </button>\n                </form>\n            </div>\n        </div>\n    );\n}\n","/home/alipw/Documents/from-stratch/fullstack/pembayaran_spp_2/client/src/pages/LoginSiswa.js",["43"],"import React, { useState } from \"react\";\nimport \"../styles/style.css\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\n\nexport default function LoginSiswa() {\n    let history = useHistory();\n\n    const [NISN, setNISN] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [message, setMessage] = useState(\"\");\n\n    //make a request to the API\n    function loginHandler() {\n        axios({\n            method: \"post\",\n            url: \"http://localhost:3001/api/login\",\n            data: {\n                level: \"siswa\",\n                username: NISN,\n                password: password,\n            },\n        }).then((response) => {\n            if (response.data.token) {\n                setMessage(\"\");\n                localStorage.setItem(\"nisn\", response.data.nisn)\n                localStorage.setItem(\"token\", response.data.token)\n                localStorage.setItem(\"level\", response.data.level)\n                history.push(\"/history\");\n            } else {\n                setMessage(response.data.message);\n            }\n        });\n    }\n\n    return (\n        <div>\n            <div className=\"login-grid\">\n                <form className=\"login-form\">\n                    <h3>Login</h3>\n                    <br />\n                    <div className=\"form-group\">\n                        <label htmlFor=\"NISN\">NISN</label>\n                        <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            id=\"NISN\"\n                            placeholder=\"Enter NISN\"\n                            value={NISN}\n                            onChange={(ev) => setNISN(ev.target.value)}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input\n                            type=\"password\"\n                            className=\"form-control\"\n                            id=\"password\"\n                            placeholder=\"Password\"\n                            value={password}\n                            onChange={(ev) => setPassword(ev.target.value)}\n                        />\n                    </div>\n                    <p className=\"text-danger\">{message}</p>\n\n                    <button\n                        type=\"button\"\n                        className=\"btn btn-primary\"\n                        onClick={loginHandler}\n                    >\n                        Submit\n                    </button>\n                </form>\n            </div>\n        </div>\n    );\n}\n","/home/alipw/Documents/from-stratch/fullstack/pembayaran_spp_2/client/src/pages/HomeAdmin.js",["44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65"],"/home/alipw/Documents/from-stratch/fullstack/pembayaran_spp_2/client/src/pages/Tes.js",["66","67","68","69"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport default function Tes() {\n    const [tableData, setTableData] = useState({});\n    const [referenceData, setReferenceData] = useState([]);\n\tconst [formData, setFormData] = useState({});\n\tconst [message, setMessage] = useState(\"\")\n\tconst tableName = \"pembayaran\";\n\t\n\tuseEffect(fetchData, []);\n\n    function fetchData() {\n        const token = localStorage.getItem(\"token\");\n        axios({\n            method: \"get\",\n            url: \"http://localhost:3001/api/crud/msc/tableinfo/\" + tableName,\n            headers: { Authorization: `Bearer ${token}` },\n        })\n            .then((response) => {\n                setReferenceData(response.data.reference_ids);\n                delete response.data[\"reference_ids\"];\n                setTableData(response.data);\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n\t}\n\t\n\tfunction sendData() {\n        if(Object.keys(formData).length != Object.keys(tableData).length){\n            setMessage(\"data Incomplete\")\n            console.log(formData)\n        }\n        else{\n            const token = localStorage.getItem(\"token\");\n            axios({\n                method: \"post\",\n                data: formData,\n                url: \"http://localhost:3001/api/crud/\" + tableName,\n                headers: { Authorization: `Bearer ${token}` },\n            })\n                .then((response) => {\n\t\t\t\t\tmakeNull()\n                })\n                .catch((error) => {\n                    if(error.response){\n                        setMessage(error.response.data)\n                        console.log(\"error : \", error.response.data)\n                    }\n                });\n            }\n    }\n\n    function makeNull() {\n        Object.keys(tableData).map((key) => {\n\t\t\tif(tableData[key].references) formData[key] = referenceData[tableData[key].references.model][0]\n\t\t\telse formData[key] = \" \";\n        });\n        setFormData({ ...formData });\n    }\n\n    function form() {\n        var form = (\n            <div className=\"form-group col-sm-5\">\n                {Object.keys(tableData).map((key) => (\n                    <>\n                        <label> {key}</label>\n                        {tableData[key].references ? (\n\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\tonChange={(ev) => {\n\t\t\t\t\t\t\t\t\tformData[key] = ev.target.value;\n\t\t\t\t\t\t\t\t\tsetFormData({ ...formData });\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tvalue={formData[key]}\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{referenceData[\n\t\t\t\t\t\t\t\t\ttableData[key].references.model\n\t\t\t\t\t\t\t\t].map((value) => (\n\t\t\t\t\t\t\t\t\t<option>{value}</option>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</select>\n                        ) : (\n                            <input\n                                type=\"text\"\n                                onChange={(ev) => {\n                                    formData[key] = ev.target.value;\n                                    setFormData({ ...formData });\n                                }}\n                                value={formData[key]}\n                                className=\"form-control\"\n                            ></input>\n                        )}\n                    </>\n                ))}\n                <br />\n                <button className=\"btn btn-primary\" onClick={makeNull}>\n                    Make Null\n                </button>\n            </div>\n        );\n\n        return form;\n    }\n\n    return form();\n}\n","/home/alipw/Documents/from-stratch/fullstack/pembayaran_spp_2/client/src/pages/History.js",["70","71","72","73","74","75","76","77","78","79"],"import React, { useState, useEffect } from \"react\";\nimport \"../styles/style.css\";\nimport { Redirect, useHistory, Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nexport default function History() {\n    const [dbData, setData] = useState({});\n    const [message, setMessage] = useState(\"\");\n    const [nisn,setNisn] = useState(\"\")\n\n    let history = useHistory();\n\n    function initialize() {\n        if (!localStorage.getItem(\"token\") || !localStorage.getItem(\"nisn\")) {\n            localStorage.clear();\n            history.push(\"/loginsiswa\");\n        }\n        const token = localStorage.getItem(\"token\");\n        const nisn = localStorage.getItem(\"nisn\");\n        setNisn(nisn)\n        axios({\n            method: \"get\",\n            url: \"http://localhost:3001/api/siswa/history/\" + nisn,\n            headers: { Authorization: `Bearer ${token}` },\n        })\n            .then((response) => {\n                setData(response.data);\n            })\n            .catch((error) => {\n                setMessage(error.message);\n            });\n    }\n\n    function crudTable() {\n        //mencoba me render data table, jika tidak ada data apapun untuk di render, maka return \"database kosong\"\n        try {\n            var crudTableHead = Object.keys(dbData[0]).map((key) => (\n                <th>{key}</th>\n            ));\n\n            var crudTableData = dbData.map((object) => (\n                <tr>\n                    {Object.keys(object).map((key) => (\n                        <td>{object[key]}</td>\n                    ))}\n                </tr>\n            ));\n        } catch (e) {\n            return <h3 className=\"text-danger padding\">Database kosong</h3>;\n        }\n\n        return (\n            <div className=\"crudTable\">\n                <table className=\"table\">\n                    <thead>\n                        <tr>{crudTableHead}</tr>\n                    </thead>\n                    <tbody>{crudTableData}</tbody>\n                </table>\n            </div>\n        );\n    }\n\n    useEffect(initialize, []);\n\n    return (\n        <>\n            <nav className=\"navbar navbar-default\">\n                <div className=\"container-fluid\">\n                    <div className=\"navbar-header\">\n                        <button\n                            type=\"button\"\n                            className=\"navbar-toggle collapsed\"\n                            data-toggle=\"collapse\"\n                            data-target=\"#bs-example-navbar-collapse-1\"\n                            aria-expanded=\"false\"\n                        >\n                            <span className=\"sr-only\">Toggle navigation</span>\n                            <span className=\"icon-bar\" />\n                            <span className=\"icon-bar\" />\n                            <span className=\"icon-bar\" />\n                        </button>\n                        <a className=\"navbar-brand\" href=\"#\">\n                            NISN : {nisn}\n                        </a>\n                    </div>\n                    <div\n                        className=\"collapse navbar-collapse\"\n                        id=\"bs-example-navbar-collapse-1\"\n                    >\n                        <ul className=\"nav navbar-nav\">\n                            <li className=\"\">\n                                <Link to=\"/history\">History</Link>\n                            </li>\n                            <li>\n                                <a href=\"#\">Link</a>\n                            </li>\n                            <li className=\"dropdown\">\n                                <a\n                                    href=\"#\"\n                                    className=\"dropdown-toggle\"\n                                    data-toggle=\"dropdown\"\n                                    role=\"button\"\n                                    aria-haspopup=\"true\"\n                                    aria-expanded=\"false\"\n                                >\n                                    Dropdown <span className=\"caret\" />\n                                </a>\n                                <ul className=\"dropdown-menu\">\n                                    <li>\n                                        <a href=\"#\">Action</a>\n                                    </li>\n                                    <li>\n                                        <a href=\"#\">Another action</a>\n                                    </li>\n                                    <li>\n                                        <a href=\"#\">Something else here</a>\n                                    </li>\n                                    <li role=\"separator\" className=\"divider\" />\n                                    <li>\n                                        <a href=\"#\">Separated link</a>\n                                    </li>\n                                    <li role=\"separator\" className=\"divider\" />\n                                    <li>\n                                        <a href=\"#\">One more separated link</a>\n                                    </li>\n                                </ul>\n                            </li>\n                        </ul>\n                        <form className=\"navbar-form navbar-left\">\n                            <div className=\"form-group\">\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"Search\"\n                                />\n                            </div>\n                            <button type=\"submit\" className=\"btn btn-default\">\n                                Submit\n                            </button>\n                        </form>\n                        <ul className=\"nav navbar-nav navbar-right\">\n                            <li>\n                                <Link to=\"/loginsiswa\">Logout</Link>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </nav>\n            <div className=\"container-fluid\">\n                {crudTable()}\n                {message}\n            </div>\n        </>\n    );\n}\n","/home/alipw/Documents/from-stratch/fullstack/pembayaran_spp_2/client/src/pages/HomePetugas.js",["80","81","82","83","84","85","86","87","88"],"import React, { useState, useEffect } from \"react\";\nimport \"../styles/style.css\";\nimport { Redirect, useHistory, Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nexport default function History() {\n    const [dbData, setData] = useState({});\n    const [message, setMessage] = useState(\"\");\n    const [tableData,setTableData] = useState({})\n    const [referenceData, setReferenceData] = useState({})\n    const [formData, setFormData] = useState({})\n    const [update,setUpdate] = useState(true)\n    const [tableName,setTableName] = useState(\"pembayaran\")\n\n\n    let history = useHistory();\n\n    useEffect(fetchTableData, []);\n    useEffect(makeNull, [tableData]);\n\n    useEffect(initialize, [update], []);\n\n\n    function fetchTableData() {\n        const token = localStorage.getItem(\"token\");\n        axios({\n            method: \"get\",\n            url: \"http://localhost:3001/api/petugas/crud/tableinfo/pembayaran\",\n            headers: { Authorization: `Bearer ${token}` },\n        })\n            .then((response) => {\n                setReferenceData(response.data.reference_ids);\n                delete response.data[\"reference_ids\"];\n                setTableData(response.data);\n            })\n            .catch((error) => {\n                setMessage(error.message)\n                console.log(error);\n            });\n\t}\n\t\n\tfunction sendData() {\n        if(Object.keys(formData).length != Object.keys(tableData).length){\n            setMessage(\"data Incomplete\")\n            console.log(formData)\n        }\n        else{\n            const token = localStorage.getItem(\"token\");\n            axios({\n                method: \"post\",\n                data: formData,\n                url: \"http://localhost:3001/api/petugas/crud/pembayaran\" ,\n                headers: { Authorization: `Bearer ${token}` },\n            })\n                .then((response) => {\n                    makeNull()\n                    setMessage('')\n                    setUpdate(!update)\n                })\n                .catch((error) => {\n                    if(error.response){\n                        setMessage(error.response.data)\n                        console.log(\"error : \", error.response)\n                    }\n                });\n            }\n    }\n\n    function makeNull() {\n        Object.keys(tableData).map((key) => {\n\t\t\tif(tableData[key].references) {\n                formData[key] = referenceData[tableData[key].references.model][0];\n            }\n\t\t\telse formData[key] = \"\";\n        });\n        setFormData({ ...formData });\n        console.log(formData)\n    }\n\n    function form() {\n        var form = \" \";\n            try{\n                form = (\n                    <div className=\"form-group col-sm-5\">\n                        {Object.keys(tableData).map((key) => (\n                            <>\n                                <label> {key}</label>\n                                {tableData[key].references ? (\n                                    <select\n                                        onChange={(ev) => {\n                                            formData[key] = ev.target.value;\n                                            setFormData({ ...formData });\n                                        }}\n                                        value={formData[key]}\n                                        className=\"form-control\"\n                                    >\n                                        {referenceData[\n                                            tableData[key].references.model\n                                        ].map((value) => (\n                                            <option>{value}</option>\n                                        ))}\n                                    </select>\n                                ) : (\n                                    <input\n                                        type=\"text\"\n                                        onChange={(ev) => {\n                                            formData[key] = ev.target.value;\n                                            setFormData({ ...formData});\n                                        }}\n                                        value={formData[key]}\n                                        className=\"form-control\"\n                                    ></input>\n                                )}\n                            </>\n                        ))}\n                        <br />\n                        <button className=\"btn btn-primary\" onClick={sendData}>\n                            Insert\n                        </button>\n                    </div>\n                );\n            }catch(error){\n               return(<h1>an error has occured</h1>)\n            }\n\n        return form;\n    }\n\n    function initialize() {\n        if (!localStorage.getItem(\"token\")) {\n            localStorage.clear();\n            history.push(\"/loginadmin\");\n        }\n        const token = localStorage.getItem(\"token\");\n        axios({\n            method: \"get\",\n            url: \"http://localhost:3001/api/petugas/history/history/history\" ,\n            headers: { Authorization: `Bearer ${token}` },\n        })\n            .then((response) => {\n                setData(response.data);\n            })\n            .catch((error) => {\n                setMessage(error.message);\n            });\n    }\n\n    function crudTable() {\n        //mencoba me render data table, jika tidak ada data apapun untuk di render, maka return \"database kosong\"\n        try {\n            var crudTableHead = Object.keys(dbData[0]).map((key) => (\n                <th>{key}</th>\n            ));\n\n            var crudTableData = dbData.map((object) => (\n                <tr>\n                    {Object.keys(object).map((key) => (\n                        <td>{object[key]}</td>\n                    ))}\n                </tr>\n            ));\n        } catch (e) {\n            return <h3 className=\"text-danger padding\">Database kosong</h3>;\n        }\n\n        return (\n            <div className=\"crudTable\">\n                <table className=\"table\">\n                    <thead>\n                        <tr>{crudTableHead}</tr>\n                    </thead>\n                    <tbody>{crudTableData}</tbody>\n                </table>\n            </div>\n        );\n    }\n\n    useEffect(initialize, []);\n\n    return (\n        <>\n            <nav className=\"navbar navbar-default\">\n                <div className=\"container-fluid\">\n                    <div className=\"navbar-header\">\n                        <button\n                            type=\"button\"\n                            className=\"navbar-toggle collapsed\"\n                            data-toggle=\"collapse\"\n                            data-target=\"#bs-example-navbar-collapse-1\"\n                            aria-expanded=\"false\"\n                        >\n                            <span className=\"sr-only\">Toggle navigation</span>\n                            <span className=\"icon-bar\" />\n                            <span className=\"icon-bar\" />\n                            <span className=\"icon-bar\" />\n                        </button>\n                        <a className=\"navbar-brand\" href=\"#\">\n                            Home\n                        </a>\n                    </div>\n                    <div\n                        className=\"collapse navbar-collapse\"\n                        id=\"bs-example-navbar-collapse-1\"\n                    >\n                        <ul className=\"nav navbar-nav navbar-right\">\n                            <li>\n                                <Link to=\"/loginadmin\">Logout</Link>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </nav>\n            <div className=\"container-fluid\">\n                {crudTable()}\n                {message}\n                {form()}\n            </div>\n        </>\n    );\n}\n",{"ruleId":"89","severity":1,"message":"90","line":7,"column":5,"nodeType":"91","messageId":"92","endLine":7,"endColumn":9},{"ruleId":"89","severity":1,"message":"93","line":8,"column":5,"nodeType":"91","messageId":"92","endLine":8,"endColumn":15},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"89","severity":1,"message":"98","line":13,"column":19,"nodeType":"91","messageId":"92","endLine":13,"endColumn":27},{"ruleId":"99","severity":1,"message":"100","line":57,"column":8,"nodeType":"101","endLine":57,"endColumn":15,"suggestions":"102"},{"ruleId":"89","severity":1,"message":"103","line":3,"column":10,"nodeType":"91","messageId":"92","endLine":3,"endColumn":18},{"ruleId":"89","severity":1,"message":"103","line":3,"column":10,"nodeType":"91","messageId":"92","endLine":3,"endColumn":18},{"ruleId":"89","severity":1,"message":"104","line":15,"column":12,"nodeType":"91","messageId":"92","endLine":15,"endColumn":20},{"ruleId":"89","severity":1,"message":"105","line":15,"column":22,"nodeType":"91","messageId":"92","endLine":15,"endColumn":33},{"ruleId":"89","severity":1,"message":"106","line":16,"column":12,"nodeType":"91","messageId":"92","endLine":16,"endColumn":19},{"ruleId":"89","severity":1,"message":"107","line":16,"column":21,"nodeType":"91","messageId":"92","endLine":16,"endColumn":31},{"ruleId":"89","severity":1,"message":"108","line":17,"column":12,"nodeType":"91","messageId":"92","endLine":17,"endColumn":22},{"ruleId":"89","severity":1,"message":"109","line":17,"column":24,"nodeType":"91","messageId":"92","endLine":17,"endColumn":37},{"ruleId":"110","severity":1,"message":"111","line":40,"column":41,"nodeType":"112","messageId":"113","endLine":40,"endColumn":43},{"ruleId":"114","severity":1,"message":"115","line":66,"column":42,"nodeType":"116","messageId":"117","endLine":66,"endColumn":44},{"ruleId":"110","severity":1,"message":"118","line":78,"column":31,"nodeType":"112","messageId":"113","endLine":78,"endColumn":33},{"ruleId":"110","severity":1,"message":"111","line":134,"column":44,"nodeType":"112","messageId":"113","endLine":134,"endColumn":46},{"ruleId":"110","severity":1,"message":"111","line":135,"column":47,"nodeType":"112","messageId":"113","endLine":135,"endColumn":49},{"ruleId":"110","severity":1,"message":"118","line":152,"column":62,"nodeType":"112","messageId":"113","endLine":152,"endColumn":64},{"ruleId":"99","severity":1,"message":"100","line":167,"column":26,"nodeType":"101","endLine":167,"endColumn":45,"suggestions":"119"},{"ruleId":"99","severity":1,"message":"120","line":170,"column":27,"nodeType":"101","endLine":170,"endColumn":35,"suggestions":"121"},{"ruleId":"122","severity":1,"message":"123","line":215,"column":21,"nodeType":"124","endLine":223,"endColumn":22},{"ruleId":"122","severity":1,"message":"125","line":267,"column":25,"nodeType":"124","endLine":267,"endColumn":62},{"ruleId":"110","severity":1,"message":"118","line":289,"column":55,"nodeType":"112","messageId":"113","endLine":289,"endColumn":57},{"ruleId":"110","severity":1,"message":"118","line":298,"column":55,"nodeType":"112","messageId":"113","endLine":298,"endColumn":57},{"ruleId":"110","severity":1,"message":"118","line":307,"column":55,"nodeType":"112","messageId":"113","endLine":307,"endColumn":57},{"ruleId":"110","severity":1,"message":"118","line":316,"column":55,"nodeType":"112","messageId":"113","endLine":316,"endColumn":57},{"ruleId":"110","severity":1,"message":"118","line":325,"column":55,"nodeType":"112","messageId":"113","endLine":325,"endColumn":57},{"ruleId":"89","severity":1,"message":"126","line":8,"column":9,"nodeType":"91","messageId":"92","endLine":8,"endColumn":16},{"ruleId":"89","severity":1,"message":"127","line":30,"column":11,"nodeType":"91","messageId":"92","endLine":30,"endColumn":19},{"ruleId":"110","severity":1,"message":"111","line":31,"column":41,"nodeType":"112","messageId":"113","endLine":31,"endColumn":43},{"ruleId":"114","severity":1,"message":"115","line":56,"column":42,"nodeType":"116","messageId":"117","endLine":56,"endColumn":44},{"ruleId":"89","severity":1,"message":"103","line":3,"column":10,"nodeType":"91","messageId":"92","endLine":3,"endColumn":18},{"ruleId":"99","severity":1,"message":"100","line":64,"column":27,"nodeType":"101","endLine":64,"endColumn":29,"suggestions":"128"},{"ruleId":"122","severity":1,"message":"125","line":83,"column":25,"nodeType":"124","endLine":83,"endColumn":62},{"ruleId":"122","severity":1,"message":"125","line":96,"column":33,"nodeType":"124","endLine":96,"endColumn":45},{"ruleId":"122","severity":1,"message":"125","line":99,"column":33,"nodeType":"124","endLine":106,"endColumn":34},{"ruleId":"122","severity":1,"message":"125","line":111,"column":41,"nodeType":"124","endLine":111,"endColumn":53},{"ruleId":"122","severity":1,"message":"125","line":114,"column":41,"nodeType":"124","endLine":114,"endColumn":53},{"ruleId":"122","severity":1,"message":"125","line":117,"column":41,"nodeType":"124","endLine":117,"endColumn":53},{"ruleId":"122","severity":1,"message":"125","line":121,"column":41,"nodeType":"124","endLine":121,"endColumn":53},{"ruleId":"122","severity":1,"message":"125","line":125,"column":41,"nodeType":"124","endLine":125,"endColumn":53},{"ruleId":"89","severity":1,"message":"103","line":3,"column":10,"nodeType":"91","messageId":"92","endLine":3,"endColumn":18},{"ruleId":"89","severity":1,"message":"129","line":13,"column":12,"nodeType":"91","messageId":"92","endLine":13,"endColumn":21},{"ruleId":"89","severity":1,"message":"130","line":13,"column":22,"nodeType":"91","messageId":"92","endLine":13,"endColumn":34},{"ruleId":"99","severity":1,"message":"131","line":19,"column":25,"nodeType":"101","endLine":19,"endColumn":36,"suggestions":"132"},{"ruleId":"99","severity":1,"message":"100","line":21,"column":27,"nodeType":"101","endLine":21,"endColumn":35,"suggestions":"133"},{"ruleId":"110","severity":1,"message":"111","line":43,"column":41,"nodeType":"112","messageId":"113","endLine":43,"endColumn":43},{"ruleId":"114","severity":1,"message":"115","line":70,"column":42,"nodeType":"116","messageId":"117","endLine":70,"endColumn":44},{"ruleId":"99","severity":1,"message":"100","line":178,"column":27,"nodeType":"101","endLine":178,"endColumn":29,"suggestions":"134"},{"ruleId":"122","severity":1,"message":"125","line":197,"column":25,"nodeType":"124","endLine":197,"endColumn":62},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","no-native-reassign",["135"],"no-negated-in-lhs",["136"],"'setToken' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["137"],"'Redirect' is defined but never used.","'editData' is assigned a value but never used.","'setEditData' is assigned a value but never used.","'display' is assigned a value but never used.","'setDisplay' is assigned a value but never used.","'curDisplay' is assigned a value but never used.","'setCurDisplay' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Expected '===' and instead saw '=='.",["138"],"React Hook useEffect has missing dependencies: 'crudTable' and 'makeNull'. Either include them or remove the dependency array.",["139"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'message' is assigned a value but never used.","'sendData' is defined but never used.",["140"],"'tableName' is assigned a value but never used.","'setTableName' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'formData' and 'referenceData'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.",["141"],["142"],["143"],"no-global-assign","no-unsafe-negation",{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},{"desc":"150","fix":"156"},"Update the dependencies array to be: [history, token]",{"range":"157","text":"158"},"Update the dependencies array to be: [history, tableName, update]",{"range":"159","text":"160"},"Update the dependencies array to be: [crudTable, dbData, makeNull]",{"range":"161","text":"162"},"Update the dependencies array to be: [history]",{"range":"163","text":"164"},"Update the dependencies array to be: [formData, referenceData, tableData]",{"range":"165","text":"166"},"Update the dependencies array to be: [history, update]",{"range":"167","text":"168"},{"range":"169","text":"164"},[1794,1801],"[history, token]",[6042,6061],"[history, tableName, update]",[6160,6168],"[crudTable, dbData, makeNull]",[2031,2033],"[history]",[659,670],"[formData, referenceData, tableData]",[700,708],"[history, update]",[6304,6306]]